{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/web","result":{"pageContext":{"currentCategory":"web","categories":["All","web","django"],"edges":[{"node":{"id":"540f1204-0d2f-5770-9882-cc17e3be4277","excerpt":"인가 (Authorization) 1. 인가란? 요청을 보낸 유저가 그 서비스를 사용할 수 있는 유저인지를 확인하는 절차이다. 2. 인가 절차 서버에 로그인을 성공한 유저는 인증을 받았다는 표시로 그 서버가 발행한 토큰을 발급받는다. 보통 이 토큰을 access token 이라고 한다. 이 token에는 user id와 같이 아주 중요한 정보가 아니면서도(예를 들어 주민등록번호 같은) 유저를 확실하게 구분할 수 있는 정보가 있어야 한다.\n2. 인증을 받은 유저는 request를 보낼 때 request header에 보통 ‘Authorization’ 라는 이름으로 token 정보를 담아서 보낸다.\n3. 서버는 이 request에 담긴 token 정보를 복호화하여 우리 서버에서 발급한 token이 맞는지 그리고 token에 담긴 user id를 확인할 수 있다.\n4. token에서 얻은 user id를 사용해서 DB에서 해당 유저의 권한(permission)을 확인한다.\n5. 해당 유…","fields":{"slug":"/web/authorization/"},"frontmatter":{"categories":"web","title":"인증과 인가(2) - 인가란?","date":"February 22, 2022"}},"next":{"fields":{"slug":"/web/authentication/"}},"previous":null},{"node":{"id":"6a6cdf2b-acd2-5124-9fe7-830d299f0f27","excerpt":"인증 (Authentication) 1. 인증이란? 유저의 identification를 확인하는 과정. 즉, 아이디와 비밀번호를 확인하는 절차 인증은 누가 우리 서비스를 쓰는지, 어떻게 쓰는지를 추적하기 위해 필요하다. 인증을 하기 위해서는 먼저 유저의 아이디와 비밀번호를 생성하는 기능 그리고 그 유저의 아이디와 비밀번호를 확인하는 기능이 필요하다. 쉽게 말하면 회원가입과 로그인으로 인증을 구현한다. 2. 로그인절차와 token 회원가입이 된 유저의 아이디와 비밀번호를 입력 서버에서는 입력한 정보가 DB에 저장된 정보와 일치하는지 확인 일치시 로그인 성공과 함께 클라이언트에 access token을 전송 로그인에 성공한 유저는 인증된 유저로써 이 서버의 로그인이 필요한 서비스를 이용할 시 request에 access token을 첨부해서 서버에 전송하므로 매번 로그인해도 되지 않도록 한다. 3. 비밀번호 관리 비밀번호는 보안을 위해 반드시 암호화되어 DB에 저장되어야 한다. 비밀번…","fields":{"slug":"/web/authentication/"},"frontmatter":{"categories":"web","title":"인증과 인가(1) - 인증이란?","date":"February 21, 2022"}},"next":{"fields":{"slug":"/django/mtv_pattern/"}},"previous":{"fields":{"slug":"/web/authorization/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}